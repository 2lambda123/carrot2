
apply plugin: 'base'
apply plugin: 'com.github.node-gradle.node'

configurations {
    it.default.extendsFrom archives
}

ext {
    yarnEnv = [:]
}

node {
    version = "${versions.node}"
    yarnVersion = "${versions.yarn}"
    download = true
}

task yarnInstall(type: YarnTask) {
    group 'build'

    inputs.file('package.json')
    inputs.file('yarn.lock')

    outputs.upToDateWhen {
        return project.file('node_modules').exists()
    }
    outputs.file('node_modules/.yarn-integrity')

    args = ['install', '--frozen-lockfile']
}

task yarnBuild(type: YarnTask) {
    group 'build'
    dependsOn yarnInstall

    afterEvaluate {
        project.properties.each { k,v ->
            if (k.startsWith("REACT_APP_")) {
                doFirst { logger.warn("Using external env variable for yarn ({}={})", k, v) }
                yarnEnv.put(k, v)
            }
        }

        inputs.properties (yarnEnv.findAll {
            it.key != "REACT_APP_BUILD_DATE" &&
            it.key != "REACT_APP_GIT_REV"
        })
    }

    afterEvaluate {
      if (project.hasProperty("srclayout") && project.srclayout == 'gatsby') {
          inputs.files(fileTree('src'))
          inputs.files(fileTree('static'))
      } else {
          inputs.files(fileTree('src'))
          inputs.files(fileTree('public'))
      }
    }

    inputs.file('package.json')
    inputs.file('yarn.lock')

    outputs.dir { project.buildDir }

    // Set the environment once the task runs, otherwise variables trigger task
    // changed events and rebuilds.
    doFirst {
        environment = yarnEnv
    }

    args = ['build']
}

task fastBuild {
    doFirst {
        logger.warn("Omitting full yarn build in fast build: ${project.path}")
    }
}

artifacts {
    archives provider { project.buildDir }, {
        if (project.hasProperty("fast")) {
            builtBy fastBuild
        } else {
            builtBy yarnBuild
        }
    }
}

task cleanNodeDirs(type: Delete) {
    delete ".gradle"
    delete "node_modules"
}

cleanall.dependsOn cleanNodeDirs

assemble.dependsOn configurations.archives
