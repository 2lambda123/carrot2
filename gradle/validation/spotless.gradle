
allprojects {
  task tidy() {
    description "Applies formatters and cleanups to sources (if configured)."
    group "verification"
  }
  check.dependsOn tidy

  tasks.matching { task -> task.name == "spotlessApply" }.configureEach {v ->
    tidy.dependsOn v
  }

  tasks.matching { task -> task.name == "spotlessCheck" }.configureEach {v ->
    check.dependsOn v
  }
}

allprojects { prj ->
  plugins.withType(JavaPlugin) {
    prj.apply plugin: 'com.diffplug.spotless'

    spotless {
      java {
        googleJavaFormat('1.9')

        licenseHeaderFile licenseHeader
        lineEndings 'UNIX'
        endWithNewline()
      }
    }
  }
}

configure(project(":dcs:contexts:frontend")) { prj ->
  prj.apply plugin: 'com.diffplug.spotless'

  spotless {
    format 'js', {
      target 'src/**'
      targetExclude "**/foamtree-impl.js", "**/circles-impl.js", "**/*.svg", "**/*.html", "**/descriptors/**"

      prettier('2.2.1').configFile('.prettierrc.json')

      lineEndings 'UNIX'
      endWithNewline()
    }
  }
}

configure(rootProject) { prj ->
  prj.apply plugin: 'groovy'
  prj.apply plugin: 'com.diffplug.spotless'

  spotless {
    groovy {
      excludeJava()
      greclipse()

      licenseHeaderFile licenseHeader
      lineEndings 'UNIX'
      endWithNewline()
    }

    groovyGradle {
      target '*.gradle', 'gradle/**/*.gradle'

      greclipse().configFile rootProject.files(
          'gradle/validation/spotless/spotless.eclipseformat.xml',
          'gradle/validation/spotless/spotless.groovyformat.prefs')
    }
  }
}