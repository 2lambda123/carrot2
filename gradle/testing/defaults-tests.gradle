import org.apache.tools.ant.taskdefs.condition.Os
import org.gradle.api.tasks.testing.logging.*

allprojects {
  plugins.withType(JavaPlugin) {
    def verboseMode = Boolean.parseBoolean(propertyOrDefault("tests.verbose", "false"))

    project.ext {
      testsWorkDir = file("${buildDir}/tmp/tests-cwd")
      testsTmpDir = file("${buildDir}/tmp/tests-tmp")
    }

    test {
      maxParallelForks = propertyOrDefault("tests.jvms", (int) Math.max(1, Math.min(Runtime.runtime.availableProcessors() / 2.0, 4.0)))

      useJUnit()

      workingDir testsWorkDir
      systemProperty("java.io.tmpdir", testsTmpDir)
      doFirst {
        testsWorkDir.mkdirs()
        testsTmpDir.mkdirs()
      }

      // Set up logging.
      if (verboseMode) {
        testLogging {
          events TestLogEvent.FAILED
          exceptionFormat TestExceptionFormat.FULL
          showExceptions true
          showCauses true
          showStackTraces true
          showStandardStreams = false
        }
        onOutput { td, event ->
          print event.message
        }
      } else {
        testLogging {
          events TestLogEvent.FAILED
          exceptionFormat TestExceptionFormat.FULL
          showExceptions true
          showCauses true
          showStackTraces true
        }
      }

      // Pass any tests.* property to the runner.
      project.properties.each { k, v ->
        if (k.startsWith("tests.")) {
          systemProperty k.toString(), v.toString()
        }
      }

      doFirst {
        // Print some diagnostics about locations used.
        logger.info("Test folders for {}: cwd={}, tmp={}", project.path, testsWorkDir, testsTmpDir)
      }
    }
  }
}
