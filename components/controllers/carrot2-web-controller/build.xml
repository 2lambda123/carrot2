<?xml version="1.0" encoding="UTF-8" ?>

<project name="Carrot2 Web Controller Component" default="help" basedir="." >

  <!-- ## these are overrioden my master build file ### -->

  <property name="distribution.dir" location="tmp/dist" />
  <property name="javadoc.dir"      location="tmp/javadoc" />
  <property name="carrot2.cvs.dir"  location="../../.." />
  <property name="descriptors.dir"  location="${carrot2.cvs.dir}/descriptors" />

  <!-- ## global properties ### -->

  <property name="deployment.port"  value="8080" />
  <property name="deployment.host"  value="localhost" />

  <property name="build.dir"        location="tmp/build" />
  <property name="build.compiler"   value="modern" /> 

  <!-- ## local properties ### -->

  <property name="dist.name"           value="carrot2-web-controller" />

  <property name="src.path"            location="src" />
  <property name="src.webapp.path"     location="web" />
  <property name="javac.optimize"      value="off" />
  <property name="javac.debug"         value="on" />

  <!-- ## classpath for compiling classes ## -->

  <path id="carrot.shared.libs">
    <!-- all jars runtime/shared/lib -->
    <fileset dir="${carrot2.cvs.dir}/lib">  
      <include name="**/*.jar"/>
    </fileset>
  </path>

  <!-- ## project classpath ### -->

  <path id="compile.classpath">
    <fileset dir="lib">
      <include name="**/*.jar" />
    </fileset>
    <path refid="carrot.shared.libs" />
  </path>

  <filterset begintoken="@" endtoken="@" id="deployment.info">
    <filter token="DEPLOY_HOST" value="${deployment.host}"/>
    <filter token="DEPLOY_PORT" value="${deployment.port}"/>
  </filterset>
  
  <!-- ##################################### -->
  <!-- ### {{{ CLEAN                     ### -->
  <!-- ##################################### -->

  <target name="clean" description="Removes compiled classes and distribution files.">
    <delete failonerror="false" includeemptydirs="true" quiet="true">
        <fileset dir="tmp" />
    </delete>
  </target>

  <!-- }}} -->
  
  <!-- ##################################### -->
  <!-- ### {{{ PREPARE                   ### -->
  <!-- ##################################### -->
  <target name="prepare">
    <mkdir dir="${build.dir}/WEB-INF/classes"  />
    <mkdir dir="${build.dir}/WEB-INF/lib" />
    <mkdir dir="${build.dir}/WEB-INF/components"/>
    <mkdir dir="${distribution.dir}" />

    <!-- copy descriptors -->
    <copy overwrite="true" flatten="true" todir="${build.dir}/WEB-INF/components" filtering="true">
        <fileset dir="${descriptors.dir}" includes="components*/*.xml" />
        <filterset refid="deployment.info" />
    </copy>

    <!-- copy processes -->
    <mkdir dir="${build.dir}/WEB-INF/processes"/>
    <copy overwrite="true" flatten="true" todir="${build.dir}/WEB-INF/processes" filtering="true">
        <fileset dir="${descriptors.dir}" includes="processes*/*.xml" />
        <filterset refid="deployment.info" />
    </copy>
    
    <!-- copy web application's resources -->
    <copy filtering="false" flatten="false" includeemptydirs="true" todir="${build.dir}">
        <fileset dir="${src.webapp.path}" />
    </copy>

    <!-- copy libraries -->    
    <copy toDir="${build.dir}/WEB-INF/lib">
        <fileset dir="lib" includes="**/*.jar" />
    </copy>
    
  </target>
  <!-- }}} -->


  <!-- ##################################### -->
  <!-- ### {{{ COMPILE SOURCE FILES      ### -->
  <!-- ##################################### -->
  <target name="compile" depends="prepare" >

    <javac destdir     = "${build.dir}/WEB-INF/classes"
           debug       = "${javac.debug}"
           optimize    = "${javac.optimize}"
           deprecation = "on"
           includeantruntime = "false"
           includejavaruntime = "false"
           classpathref = "compile.classpath"
    >
        <!-- add source code paths. -->
        <src path="${src.path}" />
    </javac>

    <!-- copy any non-java files (resources) from the source path. -->
    <copy toDir="${build.dir}/WEB-INF/classes">
       <fileset dir="${src.path}">
         <exclude name="**/*.java"/>
       </fileset>
    </copy>
  </target>
  <!-- }}} -->


  <!-- ##################################### -->
  <!-- ### {{{ build WAR file            ### -->
  <!-- ##################################### -->
  <target name="build" depends="prepare,compile" >

    <loadfile srcFile="${src.webapp.path}/WEB-INF/web.xml.securesection"
              property="tmp:web.xml.securesection" encoding="UTF-8" />
    
    <copy file="${src.webapp.path}/WEB-INF/web.xml.template"
          tofile="${build.dir}/WEB-INF/web.xml.secure"
          filtering="true" overwrite="true">
        <filterset>
            <filter token="security.domain.section" value="${tmp:web.xml.securesection}"/>
        </filterset>
    </copy>

	<war update="false" warfile="${distribution.dir}/${dist.name}.war" 
         webxml="${build.dir}/WEB-INF/web.xml.secure">
		<fileset dir="${build.dir}">
			<exclude name="WEB-INF/classes/**" />
            <exclude name="WEB-INF/web.xml**" />
            <exclude name="WEB-INF/lib/**" />
		</fileset>

        <lib dir="lib">
        </lib>

		<classes dir="${build.dir}/WEB-INF/classes" />
	</war>
  </target>
  <!-- }}} -->


  <!-- ##################################### -->
  <!-- ### {{{ HELP ON THIS FILE         ### -->
  <!-- ##################################### -->
  <target name="help" description="Displays help on available targets.">
    <echo>
    Project name: ${ant.project.name}

    Current JDK: ${ant.java.version}
    Basedir    : ${basedir}
    -----------------------------------------------------

    Available targets:

    clean     Removes temporary files.
    compile   Compiles the project/ copies resources
    build     Creates a WAR file.
    </echo>
  </target>
  <!-- }}} -->

</project>

