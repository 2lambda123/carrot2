
<project name="Carrot2 Lametyzator (PL) and Porter (EN) stemming filter" default="help" basedir="." >

  <!-- ## these are overrioden my master build file ### -->

  <property name="distribution.dir" location="tmp/dist" />
  <property name="javadoc.dir"      location="tmp/javadoc" />
  <property name="carrot2.cvs.dir"  location="../../../.." />

  <!-- ## global properties ### -->

  <property name="build.dir"        location="tmp/build" />
  <property name="build.compiler"   value="modern" /> 
  <property name="dist.name"        value="carrot2-pl-eng-stemming" />

  <!-- ## local properties ### -->

  <property name="src.path"            location="src" />
  <property name="src.webapp.path"     location="web" />
  <property name="javac.optimize"      value="off" />
  <property name="javac.debug"         value="on" />

  <!-- ##################################### -->
  <!-- ### {{{ CLEAN                     ### -->
  <!-- ##################################### -->
  <target name="clean" description="Removes compiled classes and distribution files.">
    <delete failonerror="false" includeemptydirs="true" quiet="true">
        <fileset dir="tmp" />
    </delete>
  </target>
  <!-- }}} -->

  
  <!-- ##################################### -->
  <!-- ### {{{ PREPARE                   ### -->
  <!-- ##################################### -->

  <target name="prepare" depends="generate.dependency.path">
    <mkdir dir="${distribution.dir}"  />
    <mkdir dir="${build.dir}"  />
    <mkdir dir="${javadoc.dir}" />
    <mkdir dir="${build.dir}/WEB-INF/classes" />
    <mkdir dir="${build.dir}/WEB-INF/lib" />        
  </target>
  <!-- }}} -->

  <!-- ##################################### -->
  <!-- ### {{{ DEPENDENCY analysis       ### -->
  <!-- ##################################### -->
  <property name="component.descriptor" location="pl-eng-stemming.dep.xml" />
  
  <target name="define.dependency.task">
    <taskdef resource="com/dawidweiss/carrot/ant/dependencies.antlib.xml">
        <classpath location="${carrot2.cvs.dir}/lib/carrot2-shared-lib.jar" />
    </taskdef>
  </target>

  <target name="generate.dependency.path" depends="define.dependency.task">
    <dependencylist
        property="component.dep"
        fileListId="component.dep.flist"
        componentDescriptor="${component.descriptor}"
        verbose="false"
    >
        <dependencies dir="${carrot2.cvs.dir}/lib">
            <include name="*.dep.xml" />
        </dependencies>
    </dependencylist>
    <path id="classpath.dependencies">
        <filelist refid="component.dep.flist" />
    </path>
  </target>

  <target name="show.dependencies" depends="define.dependency.task">
    <dependencylist componentDescriptor="${component.descriptor}" verbose="on">
        <dependencies dir="${carrot2.cvs.dir}/lib">
            <include name="*.dep.xml" />
        </dependencies>
    </dependencylist>
  </target>
  
  <target name="collect.dependencies" depends="prepare">
    <dependencylist componentDescriptor="${component.descriptor}" verbose="on"
                    fileListId="component.dep.flist">
        <dependencies dir="${carrot2.cvs.dir}/lib">
            <include name="*.dep.xml" />
        </dependencies>
    </dependencylist>

    <copyfilelist todir="${distribution.dir}">
        <filelist refid="component.dep.flist" />
    </copyfilelist>
  </target>
  <!-- }}} -->

  


  <!-- ##################################### -->
  <!-- ### {{{ COMPILE SOURCE FILES      ### -->
  <!-- ##################################### -->

  <target name="compile" depends="prepare" >
    <javac destdir     = "${build.dir}/WEB-INF/classes"
           debug       = "${java.debug}"
           optimize    = "${java.optimize}"
           deprecation = "on"
           includeantruntime = "false"
           includejavaruntime = "false"
    >
        <classpath refid="classpath.dependencies" />
        <classpath location="${carrot2.cvs.dir}/lib/compile-time-only/servlet.jar" />
        <!-- add source code paths. -->
        <src path="${src.path}" />
        <exclude name="**/*Test.java"/>
    </javac>

    <!-- copy any non-java files (resources) from the source path. -->
    <copy toDir="${build.dir}/WEB-INF/classes">
       <fileset dir="${src.path}">
         <exclude name="**/*.java"/>
       </fileset>
    </copy>
    
    <!-- copy webapp resources -->
    <copy filtering="false" flatten="false" includeemptydirs="true" todir="${build.dir}">
        <fileset dir="${src.webapp.path}" />
    </copy>
    
    <!-- copy libraries -->
    <!-- 
    <copy filtering="false" flatten="true" includeemptydirs="true" todir="${build.dir}/WEB-INF/lib">
        <fileset dir="lib" includes="**/*.jar" />
    </copy>
    -->
  </target>
  <!-- }}} -->


  <!-- ##################################### -->
  <!-- ### {{{ build war file            ### -->
  <!-- ##################################### -->
  <target name="build" depends="compile" >

	<war update="false" warfile="${distribution.dir}/${dist.name}.war" webxml="${build.dir}/WEB-INF/web.xml">
		<fileset dir="${build.dir}">
			<exclude name="WEB-INF/web.xml" />
			<exclude name="WEB-INF/classes/**" />
			<exclude name="WEB-INF/lib/**" />
		</fileset>
		
		<classes dir="${build.dir}/WEB-INF/classes">
          <exclude name="**/*Test"/>
		</classes>

        <lib dir="${build.dir}/WEB-INF/lib" />
	</war>

  </target>
  <!-- }}} -->


  <!-- ##################################### -->
  <!-- ### {{{ HELP ON THIS FILE         ### -->
  <!-- ##################################### -->
  <target name="help" description="Displays help on available targets.">
    <echo>
    Project name: ${ant.project.name}

    Current JDK: ${ant.java.version}
    Basedir    : ${basedir}
    -----------------------------------------------------

    Available targets:

    clean     Removes all temporary files.
    compile   Compiles the project.
    build     Builds WAR file
    </echo>
  </target>
  <!-- }}} -->

</project>
