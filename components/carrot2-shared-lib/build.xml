<?xml version="1.0" encoding="UTF-8" ?>

<project name="Carrot2 shared library" default="help" basedir="." >

  <!-- ### these are overrioden my master build file ### -->

  <property name="distribution.dir" location="tmp/dist" />
  <property name="javadoc.dir"      location="tmp/javadoc" />
  <property name="carrot2.cvs.dir"  location="../.." />

  <!-- ### global properties ### -->

  <property name="build.dir"        value="tmp/build" />
  <property name="build.compiler"   value="modern" /> 
  <property name="lib.name"         value="carrot2-shared-lib.jar" />

  <!-- ## classpath for compiling classes ## -->
  <path id="carrot.shared.libs">
    <!-- all jars runtime/shared/lib -->
    <fileset dir="${carrot2.cvs.dir}/lib">
      <include name="**/*.jar"/>
      <exclude name="**/${lib.name}" />
    </fileset>
  </path>


  <!-- ##################################### -->
  <!-- ### {{{ PREPARE directories       ### -->
  <!-- ##################################### -->
  <target name="prepare" description="Prepare build directories.">
    <mkdir dir="${build.dir}/classes" />
    <mkdir dir="${build.dir}/src-xml-binding-generated" />
    <mkdir dir="${distribution.dir}" />
  </target>
  <!-- }}} -->


  <!-- ##################################### -->
  <!-- ### {{{ CLEAN project             ### -->
  <!-- ##################################### -->
  <target name="clean" description="Removes all temporary files (from local build dirs)">
    <delete failonerror="false" includeemptydirs="true" quiet="true">
        <fileset dir="tmp" />
    </delete>
  </target>
  <!-- }}} -->

  <!-- ##################################### -->
  <!-- ### {{{ Prepare xml bindings      ### -->
  <!-- ##################################### -->
  <target name="xmlbinding" depends="prepare" description="Compiles XML bindings using Castor.">

    <delete dir="${build.dir}/src-xml-binding-generated" failonerror="false" includeemptydirs="true" quiet="true" />
    <mkdir  dir="${build.dir}/src-xml-binding-generated" />

    <java classname="org.exolab.castor.builder.SourceGenerator"
          classpathref="carrot.shared.libs" failonerror="true" fork="true">
        <arg value="-i" /><arg file="${carrot2.cvs.dir}/schema/component-descriptor.xsd"/>
        <arg value="-dest"/><arg file="${build.dir}/src-xml-binding-generated" />
        <arg line="-verbose" /> 
        <arg value="-binding-file"/><arg file="xml-binding/component-descriptor-binding.xml" />
    </java>

    <java classname="org.exolab.castor.builder.SourceGenerator"
          classpathref="carrot.shared.libs" failonerror="true" fork="true">
        <arg value="-i" /><arg file="${carrot2.cvs.dir}/schema/mime-types/x-carrot-clustering-input-query.xsd"/>
        <arg value="-dest"/><arg file="${build.dir}/src-xml-binding-generated" />
        <arg line="-verbose" />
        <arg value="-binding-file"/><arg file="xml-binding/query-binding.xml" />
    </java>

    <java classname="org.exolab.castor.builder.SourceGenerator"
          classpathref="carrot.shared.libs" failonerror="true" fork="true">
        <arg value="-i" /><arg file="${carrot2.cvs.dir}/schema/process-descriptor.xsd"/>
        <arg value="-dest"/><arg file="${build.dir}/src-xml-binding-generated" />
        <arg line="-verbose" />
        <arg value="-binding-file"/><arg file="xml-binding/process-descriptor-binding.xml" />
    </java>

  </target>
  <!-- }}} -->

  <!-- ##################################### -->
  <!-- ### {{{ COMPILE project           ### -->
  <!-- ##################################### -->
  <target name="compile" depends="prepare, xmlbinding" description="Compiles all Java classes.">

    <javac 
            destdir="${build.dir}/classes"
            failonerror="true"
            includeantruntime="false"
            includejavaruntime="false"
            classpathref="carrot.shared.libs"
            debug="true"
            optimize="false"
    >
        <src path="src" />
        <src path="${build.dir}/src-xml-binding-generated" />
    </javac>
    
    <!-- copy any non-java files (resources) from the source path. -->
    <copy toDir="${build.dir}/classes">
       <fileset dir="src">
         <exclude name="**/*.java"/>
       </fileset>
       <fileset dir="${build.dir}/classes">
         <include name="**/*.properties" />
       </fileset>
    </copy>

  </target>
  <!-- }}} -->


  <!-- ##################################### -->
  <!-- ### {{{ Build adapters JAR        ### -->
  <!-- ##################################### -->
  <target name="adapters" depends="compile" description="Builds a JAR with adapter classes">
	  <jar
	        compress="true"
	        jarfile="${distribution.dir}/carrot2-adapters.jar"
	        update="false"
	  >
	    <fileset dir="${build.dir}/classes">
	    	<include name="com/dawidweiss/carrot/adapters/**" />
	    </fileset>
	  </jar>
  </target>
  <!-- }}} -->

  <!-- ##################################### -->
  <!-- ### {{{ build project             ### -->
  <!-- ##################################### -->

  <target name="build" depends="compile,adapters,javadoc" description="Builds a JAR and copies it to the runtime environment.">

      <jar
            compress="true"
            jarfile="${distribution.dir}/${lib.name}"
            manifest="misc/Manifest.mf"
            update="false"
      >
        <fileset dir="${build.dir}/classes" />
      </jar>

  </target>
  <!-- }}} -->

  
  <!-- ##################################### -->
  <!-- ### {{{ JAVADOC project           ### -->
  <!-- ##################################### -->

  <target name="javadoc" depends="compile" description="Builds a JAR and copies it to the runtime environment.">

    <delete dir="${javadoc.dir}" failonerror="false" />
    <mkdir dir="${javadoc.dir}" />

    <javadoc packagenames     = "com.dawidweiss.carrot.*"
             destdir          = "${javadoc.dir}"
             classpathref     = "carrot.shared.libs"
             public           = "true"
             version          = "false"
             use              = "true"
             doctitle         = "${ant.project.name}"
             header           = "${ant.project.name}"
             footer           = "Please refer to project documentation at &lt;br&gt;&lt;a href=http://www.cs.put.poznan.pl/dweiss/carrot&gt;http://www.cs.put.poznan.pl/dweiss/carrot&lt;/a&gt;"
             bottom           = "&lt;center&gt;Copyright (c) Institute of Computing Science, Poznan University of Technology&lt;/center&gt;"
             failonerror      = "true"
             stylesheetfile   = "${carrot2.cvs.dir}/misc/javadoc/stylesheet.css"
    >
        <sourcepath path="src"/>
        <sourcepath path="${build.dir}/src-xml-binding-generated" />
    </javadoc>
  </target>
  <!-- }}} -->


  <!-- ########################################### -->
  <!-- ### {{{ GENERATE Tokenizer using Javacc ### -->
  <!-- ########################################### -->

  <target name="tokenizer" description="Generate tokenizer classes using javacc.">
    <fail message="javacc.home property must be available and must point to javacc home dir."
          unless="javacc.home" />

	<javacc target="src/com/dawidweiss/carrot/tokenizer/TokenizerImpl.jj"
	        javacchome="${javacc.home}"
	        outputdirectory="src/com/dawidweiss/carrot/tokenizer"/>
  </target>
  <!-- }}} -->


  <!-- ##################################### -->
  <!-- ### {{{ HELP ON THIS FILE         ### -->
  <!-- ##################################### -->
  <target name="help" description="Displays help on available targets.">
    <echo>
    Project name: ${ant.project.name}
    (c) Poznan University of Technology.

    Current JDK: ${ant.java.version}
    Basedir    : ${basedir}
    
    Distribution dir: ${distribution.dir}
    Javadoc dir     : ${javadoc.dir}
    -----------------------------------------------------

    Public targets:
        clean    - removes temporary files
        build    - compiles and copies JAR files to distribution
                   directory (local)
        compile  - compiles source code only
        docs     - creates JavaDoc documentation
    </echo>
  </target>
  <!-- }}} -->

</project>
