<?xml version="1.0" encoding="UTF-8" ?>

<project name="Carrot2 Tokenizer Component" default="build">
	
	<property file="local.properties" />
	<property file="${user.home}/javacc.properties" />

    <property name="project.dir"      location="${basedir}" />
    <property name="carrot2.cvs.dir"  location="../.." />
    <property name="dist.name"        value="carrot2-util-tokenizer" />

    <property name="type"       	  value="jartype" />
    <property name="tests.available"  value="true"    />
    <import file="${carrot2.cvs.dir}/components/common-targets.inc" />

	<!-- JFlex task definition -->
	<taskdef classname="JFlex.anttask.JFlexTask" name="jflex" />
	
	<!-- Tasks specific to the project -->
	
    <target name="javacc">
		<description>
Generate tokenizer classes using javacc. These classes need not
be regenerated on each build. They are part of the CVS distribution
and only need to be changed if the parser file changed.
		</description>

        <fail unless="javacc.home">
ERROR: javacc.home property must be available and must point to javacc home dir.
You can define this property in a file 'local.properties' that is ignored 
by the CVS in this project.
		</fail>

	    <javacc target="src/com/dawidweiss/carrot/util/tokenizer/parser/javacc/JavaCCWordBasedParserImpl.jj"
	          javacchome="${javacc.home}"
	          outputdirectory="src/com/dawidweiss/carrot/util/tokenizer/parser/javacc"/>
    </target>

	<target name="jflex">
		<jflex file="src/com/dawidweiss/carrot/util/tokenizer/parser/jflex/JFlexWordBasedParserImpl.jflex"
			outdir="src/com/dawidweiss/carrot/util/tokenizer/parser/jflex/"/>
	</target>
	
</project>
