<?xml version="1.0"?>
<!-- Query request description -->
<service>
    <request encoding="UTF-8">
        <service url="http://www.alltheweb.com/search" method="get" />

        <parameters>
            <parameter name="q"       mapto="query.string" />
            <parameter name="hits"    value="50" />
            <parameter name="o"       mapto="query.startFrom" />

            <parameter name="cat"     value="web" />
            <parameter name="custid"  value="mozilla-search" />
            <parameter name="cs"      value="utf-8" />
        </parameters>

        <!-- override the http-headers you need here -->
        <http-overrides>
            <header name="User-Agent">Mozilla/5.0 (X11; U; Linux i686; en-US; rv:0.9.7) Gecko/20011221</header>
            <header name="Accept-Charset">UTF-8</header>
        </http-overrides>
    </request>

    <response encoding="UTF-8">
        <!-- optional elements for multipage reader -->
        <pageinfo>
            <expected-results-per-page>100</expected-results-per-page>
            <!-- issues a warning if the number of recognized snippets drops below this percentage. -->
            <warn-when-below>0.8</warn-when-below>

            <number-of-matched-documents>
                <regexpression>
                    <match><![CDATA[of [^R]*R]]></match>
                    <replace regexp="[^0123456789]*" with="" />
                </regexpression>
            </number-of-matched-documents>

            <!-- if no results number is found, the page is again checked whether
                 it matched a 'no-results' page -->
            <no-results-marker>
                <regexpression>
                    <match><![CDATA[No[\ \r\n]+Web[\ \r\n]+pages[\ \r\n]+found[\ \r\n]+that]]></match>
                </regexpression>
            </no-results-marker>
        </pageinfo>

        <!-- snippet extraction -->
        <snippet>
            <!-- this should match the entire snippet -->
            <match>
               <regexp><![CDATA[<!--IS-->.*?<!--IE-->]]></regexp>
            </match>
            <!-- This will cut out only the title.
                start and end matches give indexes in a snippet string, which are
                then used to cut out a substring.
             -->
            <title>
               <start consume="true">
                   <regexp><![CDATA[resTitle"><a.*?>]]></regexp>
               </start>
               <end   consume="true">
                   <regexp><![CDATA[</a>]]></regexp>
               </end>
            </title>

            <!-- This will cut out the url of the snippet.
             -->
            <url>
               <start consume="true">
                   <regexp><![CDATA[class="resURL">]]></regexp>
               </start>
               <end   consume="true">
                   <regexp><![CDATA[</span>]]></regexp>
               </end>
            </url>

            <!-- This will cut out the summary of a snippet.
             -->
            <summary>
               <start consume="true">
                   <regexp><![CDATA[resTitle"><a.*?<br.*?>]]></regexp>
               </start>
               <end   consume="true">
                   <regexp><![CDATA[<br.*?>]]></regexp>
               </end>
            </summary>
        </snippet>
    </response>
</service>
