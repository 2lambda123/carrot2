
EXPERIMENT:
Run N threads concurrents (n = 2...20) for a certain amount of time
(10 secs?). Each thread counts its iterations and in each iteration
attempts to allocate an array or integers of fixed size
(100,500,1000,5000,10000).

Compare the average number of iterations threads made when
allocations are performed:

1) using new/ = null (Garbage collector)
2) using Jakarta Commons' Pool: StackObjectPool (no max boundary)

RESULTS:

threads,allocation array length, class, thread_X_allocations in 10secs.

2,100,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,1485117,1488949,
2,100,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,7087022,8235084,
2,500,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,304913,291754,
2,500,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,7754837,8586115,
2,1000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,158067,151592,
2,1000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,7755036,8705723,
2,5000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,30739,31011,
2,5000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,7097639,8298326,
2,10000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,14972,15110,
2,10000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,7544923,8358918,
5,100,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,564136,614107,584787,606585,524211,
5,100,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,3138637,3326025,3351589,3465171,3400693,
5,500,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,125430,131485,107023,119582,115257,
5,500,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,3174719,3420392,3518338,3521543,3529439,
5,1000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,56860,48069,57190,55045,58303,
5,1000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,3191974,3581930,3527129,3388290,3527344,
5,5000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,11716,12936,12036,11778,12428,
5,5000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,3251504,3626145,3395967,3610835,3599169,
5,10000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,5971,6199,6339,6952,6635,
5,10000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,3709851,3704488,3298099,3522883,3713059,
10,100,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,258469,265861,278459,230934,290252,250325,243127,263044,287584,265625,
10,100,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,1870279,1915098,1887406,1896017,1719033,1862450,1850374,1656498,1818530,1864714,
10,500,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,60473,61684,64275,65800,64657,68076,59447,61642,61354,59703,
10,500,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,1700030,1768072,1918279,1942009,1890021,1825730,1855606,1864434,1849078,1837008,
10,1000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,35130,30557,29865,28225,31158,32406,30016,25407,27910,30792,
10,1000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,1546971,1917687,1899119,1873251,1800131,1826391,1865085,1834987,1829467,1854068,
10,5000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,5960,6379,5425,6122,5619,5435,5719,6936,6744,6194,
10,5000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,1807328,1946990,1880847,1913701,1900866,1925681,1312441,1880566,1847353,1721144,
10,10000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,2998,3103,3123,3179,3200,3082,3232,3066,2607,2958,
10,10000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,1957700,1733628,1772235,1919255,1947113,1895950,1865111,1807234,1811736,1799321,
20,100,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,155457,116874,135635,117674,112435,168002,137037,161988,147048,164570,135705,153836,134991,148398,156236,145647,170071,116989,160972,142630,
20,100,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,981039,975051,1077375,1057696,1071002,1049493,1046560,1033216,1044822,1075409,1056411,965145,978019,981045,953482,974422,964757,943360,931376,869780,
20,500,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,25710,30526,32084,27463,30732,31376,29303,26658,28660,30199,27402,25900,29556,22933,28711,32332,31484,28168,25123,23508,
20,500,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,870423,1075575,1085214,1033158,1008999,974124,1010264,1008370,990967,980713,961567,975652,949318,983926,974189,913915,916997,919337,935759,945273,
20,1000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,13355,13003,14125,14972,10901,12591,12459,12491,10514,12540,12546,14851,13340,12746,13318,12121,12374,13343,13354,10109,
20,1000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,961218,1032187,1041652,987341,1053881,1038861,1005613,1011408,1004778,836338,1001719,993238,1007019,962595,926177,934016,945216,926844,916723,946805,
20,5000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,2381,3557,3244,3038,2634,2776,2595,2642,3058,1960,2997,3496,3126,3433,2875,3091,2759,2877,2715,2442,
20,5000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,970788,1175656,1173747,1185513,1184764,1154151,1163667,1115499,1147356,1120646,1178930,1090551,1101538,969819,998947,975016,1024801,980885,943459,928178,
20,10000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadNewAndGC,1592,1488,1534,1580,1434,1606,1359,1469,1518,1379,1584,1565,1659,1406,1790,1469,1171,1218,1677,1521,
20,10000,com.dawidweiss.carrot.perfchecks.ObjectAllocationSpeed$WorkThreadPool,1080404,1117337,1120033,1125962,1141436,1036800,975921,1067493,1057500,977009,1008383,988190,986960,949005,1005925,973110,974450,1035847,851828,694399,
