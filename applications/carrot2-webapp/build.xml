
<project name="webapp" default="templates">
  <!-- 
       Basedir for the build file. Set by master build
       or defaults to the current directory. 
    -->
  <property name="webapp.basedir" location="${basedir}" />

  <!-- Build number -->
  <property name="build.number" value="" />

  <!-- Webapp build dirs -->
  <property name="webapp.dir" location="${webapp.basedir}/tmp/webapp" />
  <property name="webapp.skins.dir" location="${webapp.dir}/skins${build.number}" />

  <!-- 
       Web application WAR file.
    -->
  <target name="build" depends="webapp.templates, webapp.skins.prepare, webapp.sprites"
    description="Builds the Web application.">
    <antcall target="jar" />
    <antcall target="lib.flattened" />

    <mkdir dir="${webapp.dir}" />
    <mkdir dir="${webapp.dir}/classes" />

    <!-- Clover hack: we explicitly provide the compiler attribute to compile without Clover's instrumentation -->
    <javac srcdir="${webapp.basedir}/src"
           destdir="${webapp.dir}/classes"
           compiler="modern"
           source="1.5"
           target="1.5"
           encoding="UTF-8">
      <classpath refid="lib.classpath" />
      <classpath path="${jar.dir}/carrot2-core.jar" />
    </javac>
    <copy tofile="${webapp.dir}/classes/log4j.xml"
          file="core/carrot2-util-log4j/src/log4j-webapp.xml" />
    <copy todir="${webapp.dir}/classes">
      <fileset dir="core/carrot2-component-suites/suites">
        <include name="carrot2-default/suite-local.xml" />
        <include name="carrot2-default/suite-common.xml" />
        <include name="carrot2-default/suite-webapp.xml" />
      </fileset>
    </copy>

    <war destfile="${webapp.dir}/carrot2-webapp.war" webxml="${webapp.basedir}/web/WEB-INF/web.xml">
      <fileset dir="${webapp.basedir}/web">
        <include name="index.html" />
      </fileset>
      <fileset dir="${webapp.skins.dir}/..">
        <include name="skins${build.number}/**" />
      </fileset>
      <lib dir="${lib.flattened}" />
      <classes dir="${webapp.dir}/classes">
        <exclude name="*.java" />
      </classes>
      <classes dir="${webapp.basedir}/src">
        <exclude name="*.java" />
        <exclude name="*.template.*" />
      </classes>
      <classes dir="core/carrot2-util-log4j/src">
        <include name="appender-*" />
        <include name="filters-*" />
      </classes>
    </war>

    <delete dir="${webapp.dir}/classes" />
    <delete dir="${webapp.skins.dir}" />
  </target>

  <target name="webapp.skins.prepare">
    <mkdir dir="${webapp.skins.dir}" />
    <copy todir="${webapp.skins.dir}">
      <fileset dir="${webapp.basedir}/web/skins" />
    </copy>
  </target>

  <!-- 
       Build sprite images
    -->
  <macrodef name="build-sprites">
    <attribute name="base.dir" />
    <attribute name="root.dir" />

    <sequential>
      <taskdef name="smartsprites" classname="org.carrot2.labs.smartsprites.ant.SmartSpritesTask">
        <classpath>
          <fileset dir="${smartsprites.home}/lib" />
        </classpath>
      </taskdef>

      <smartsprites rootdir="@{base.dir}/@{root.dir}"
                    outputdir="@{base.dir}/@{root.dir}/sprite"
                    cssfilesuffix=""
                    loglevel="WARN" />

      <copy todir="@{base.dir}/@{root.dir}/sprite" overwrite="false">
        <fileset dir="@{base.dir}/@{root.dir}">
          <include name="css/**" />
        </fileset>
      </copy>
    </sequential>
  </macrodef>

  <target name="webapp.sprites" if="smartsprites.home" depends="webapp.skins.prepare">
    <build-sprites base.dir="${webapp.skins.dir}" root.dir="fancy-compact" />
    <build-sprites base.dir="${webapp.skins.dir}" root.dir="fancy-large" />
    <build-sprites base.dir="${webapp.skins.dir}" root.dir="simple" />
  </target>

  <target name="webapp.sprites.eclipse" if="smartsprites.home">
    <build-sprites base.dir="${webapp.basedir}/web/skins" root.dir="fancy-compact" />
    <build-sprites base.dir="${webapp.basedir}/web/skins" root.dir="fancy-large" />
    <build-sprites base.dir="${webapp.basedir}/web/skins" root.dir="simple" />
  </target>

  <target name="webapp.eclipse.setup" depends="webapp.templates, webapp.sprites.eclipse" />
  
  <!-- 
       Processing of file templates
    -->
  <target name="templates"
          description="Generate dynamic webapp files">

    <condition property="sprite.suffix" value="sprite/" else="">
      <isset property="smartsprites.home" />
    </condition>

    <filterset id="version.filterset">
      <filter token="VERSION" value="${build.number}" />
    </filterset>

    <copy file="${webapp.basedir}/src/jawr.template.properties"
          tofile="${webapp.basedir}/src/jawr.properties"
          overwrite="true">
      <filterset refid="version.filterset" />
      <filterset>
        <filter token="SPRITE" value="${sprite.suffix}" />
      </filterset>
    </copy>

    <copy file="${webapp.basedir}/src/config.template.xml"
          tofile="${webapp.basedir}/src/config.xml"
          overwrite="true">
      <filterset refid="version.filterset" />
    </copy>

    <copy file="${webapp.basedir}/web/WEB-INF/web.template.xml"
          tofile="${webapp.basedir}/web/WEB-INF/web.xml"
          overwrite="true">
      <filterset refid="version.filterset" />
    </copy>
  </target>

  <target name="clean.webapp">
    <delete dir="${webapp.dir}" />
  </target>

</project>
