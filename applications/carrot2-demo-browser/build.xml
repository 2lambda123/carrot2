
<project name="Carrot2 Demo Browser" default="build">

    <property file="${user.home}/.carrot.properties" />
    <property file="local.properties" />

    <property name="project.dir"      location="${basedir}" />
    <property name="carrot2.cvs.dir"  location="../.." />
    <property name="dist.name"        value="carrot2-demo-browser" />

    <property name="type" value="jartype" />
    <property name="distribution.dir" location="${project.dir}/tmp/dist" />

    <property name="distribution.zips.dir" location="${project.dir}/tmp/zips" />
    <property name="distribution.zip.name" value="carrot2-local-demo.zip" /> 

    <import file="${carrot2.cvs.dir}/components/common-targets.inc" />

	<target name="build" depends="build.full" />



    <target name="webstart" depends="clean,build.full">
    	<property name="distribution.webstart" location="${project.dir}/tmp/webstart" />
		<property name="keystore.alias" value="carrot2.org" />
		<property name="keystore.password" value="carrot2" />
		<property name="keystore" value="webstart/carrot2.org.keystore" />

       	<java classname="bsh.Interpreter" dir="webstart" fork="true">
       		<classpath>
       			<fileset dir="${carrot2.cvs.dir}/lib" includes="*bsh*.jar" />
       		</classpath>
       		<arg file="webstart/create-resources.bsh" />
       	</java>

		<mkdir dir="${distribution.webstart}/lib" />
       	<jar jarfile="${distribution.webstart}/lib/demo-resources.jar" update="false">
       		<fileset dir="webstart">
       			<include name="components/**" />
       			<include name="processes/**" />
       			<include name="demo-resources.xml" />
       		</fileset>
       	</jar>
       	
       	<delete file="webstart/demo-resources.xml" />

       	<copy todir="${distribution.webstart}">
       		<fileset dir="${distribution.dir}" />
       	</copy>

       	<delete>
       		<fileset dir="${distribution.webstart}">
       			<include name="**/*jdic*" />
       			<include name="**/*jdic*/**" />
       		</fileset>
       	</delete>

       	<copy todir="${distribution.webstart}">
       		<fileset dir="webstart">
       			<include name="lib/**" />
       			<include name="img/**" />
       			<include name="*.php" />
       		</fileset>
       	</copy>
       	
       	<java classname="bsh.Interpreter" dir="${distribution.webstart}" fork="true">
       		<classpath>
       			<fileset dir="${carrot2.cvs.dir}/lib" includes="*bsh*.jar" />
       		</classpath>
       		<arg file="webstart/create-files.bsh" />
       	</java>

        <signjar alias="${keystore.alias}" storepass="${keystore.password}" keystore="${keystore}">
    		<fileset dir="${distribution.webstart}">
    			<include name="**/*.jar" />
    		</fileset>
       	</signjar>
    </target>



    <target name="dist" depends="clean,build.full">
        <filterchain id="cutout.tmp-dist">
            <tokenfilter>
                <replacestring from="tmp\dist\" to="" />
                <replacestring from="tmp/dist/" to="" />
            </tokenfilter>
        </filterchain>

    	<copy file="demo.bat" todir="${distribution.dir}" filtering="true">
            <filterchain refid="cutout.tmp-dist" />
    	</copy>
    	<copy file="demo.sh" todir="${distribution.dir}" overwrite="true" filtering="true">
            <filterchain refid="cutout.tmp-dist" />
            <filterchain>
                <deletecharacters chars="\r" />
            </filterchain>
    	</copy>
    	<copy todir="${distribution.dir}">
    		<fileset dir=".">
    			<include name="components/**" />
    			<include name="processes/**" />
                <include name="readme.txt" />
    		</fileset>
    	</copy>

        <mkdir dir="${distribution.zips.dir}" />
        <zip compress="true" duplicate="fail" update="false" whenempty="fail"
            zipfile="${distribution.zips.dir}/${distribution.zip.name}">
            <fileset dir="${distribution.dir}">
                <exclude name="**/*.sh" />
            </fileset>
            <zipfileset dir="${distribution.dir}" filemode="755">
                <include name="**/*.sh" />
            </zipfileset>
        </zip>
    </target>


    <target name="build.full">
        <property name="copy.dependencies" value="true" />
        <property name="single.jar" value="false" />
		<property name="profile" value="full" />

        <ant target="build.${type}"
             antfile="${carrot2.cvs.dir}/components/master.xml" inheritall="true" inheritrefs="true">
        </ant>
    </target>

    
    <target name="obfuscate">
        <!-- 
        We could move this target to common targets because it is quite generic. profile
        is usually set in the build file somewhere anyway and the obf.distribution.dir
        could be set as a parameter. Selection of JARs for obfuscation is by defining
        filesets according to your needs.
        -->
        <property name="profile" value="full" />
        <property name="obf.distribution.dir" location="tmp/dist-obfuscated" />
        
        <!-- Prepare filesets of obfuscated/library files -->
        <fileset dir="${obf.distribution.dir}" id="library.jars">
            <include name="**/*.jar" />
            <exclude name="**/carrot2-*.jar" />
        </fileset>
        <fileset dir="${obf.distribution.dir}" id="input.jars">
            <include name="**/carrot2-*.jar" />
        </fileset>

        <property name="proguard.rules.file" location="${obf.distribution.dir}/${dist.name}.pro" />

        <!-- Obfuscate in a separate folder. -->
        <delete dir="${obf.distribution.dir}" failonerror="false" />
        <copy todir="${obf.distribution.dir}">
            <fileset dir="${distribution.dir}" />
        </copy>

        <!-- Collect rules for obfuscating and run proguard -->
        <taskdef resource="proguard/ant/task.properties">
            <classpath location="${carrot2.cvs.dir}/lib/proguard/proguard.jar" />
        </taskdef>
        <ant target="proguard.collect" 
            antfile="${carrot2.cvs.dir}/components/master.xml" inheritall="true" inheritrefs="true" />
		<proguard configuration="${proguard.rules.file}" defaultpackage="c2" ignorewarnings="true" 
            printmapping="${obf.distribution.dir}/${dist.name}.mapping"
            printseeds="${obf.distribution.dir}/${dist.name}.seeds">
                <injar refid="input.jars" />
                <outjar file="tmp/obfuscated.jar"/>

                <libraryjar dir="${java.home}/lib/rt.jar"/>
                <libraryjar refid="library.jars" />
		</proguard>

        <!-- Remove input JARs used for obfuscation. -->
        <delete>
            <fileset refid="input.jars" />
        </delete>
        <!-- <delete file="${proguard.rules.file}" /> -->
        <move file="tmp/obfuscated.jar" tofile="${obf.distribution.dir}/${dist.name}.jar" />
    </target>


    <target name="build.stripped">
        <property name="copy.dependencies" value="true" />
        <property name="single.jar" value="false" />
		<property name="profile" value="stripped" />

        <ant target="build.${type}"
             antfile="${carrot2.cvs.dir}/components/master.xml" inheritall="true" inheritrefs="true">
        </ant>
    </target>
</project>
