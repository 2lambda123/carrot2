<?xml version="1.0" encoding="UTF-8" ?>

<project name="Carrot2 Documentation" default="html.chunked" basedir="." >

    <!-- Include local properties, if present. -->
    <property file="local.properties" />

    <!-- Override these properties -->
    <property name="carrot2.cvs.dir"         location="../carrot2" />
    <property name="docbook.styler"          value="${undefined.value}" />

    <!-- Override these if needed --> 
    <property name="build.dir"               location="tmp/build" />
    <property name="distribution.dir"        location="tmp/dist" />
    <property name="temp:docbook.ready.file" location="${build.dir}/docbook-ready-file.tmp"/>
    <property name="temp:fo.ready.file"      location="${build.dir}/fo-ready-file.tmp" />
    <property name="manual.name"              value="carrot2-developers-manual" />
    <property name="installation.manual.name" value="carrot2-installation-manual" />


    <!-- Renders a single HTML manual -->
    <target name="html.single" depends="check.required-properties, prepare, assemble-parts">
        <description>
        This task will render a single HTML version of the manual to 
        'distribution.dir'
        </description>

        <!-- run styler to produce single html version -->
        <mkdir dir="${build.dir}/styled" />
        <ant antfile="${docbook.styler}" inheritall="false" target="html.single">
        	 <property name="basedir" location="${docbook.styler.base}" />
             <property name="docbook.xml.dir" location="${build.dir}/assembled" />
             <property name="docbook.resources.dir" location="figures-bitmap" />
             <property name="distribution.dir" location="${distribution.dir}" />
             <property name="build.dir" location="${build.dir}/styled" />
             <property name="manual.name" value="${manual.name}-single" />
             <property name="index.name"  value="${manual.name}" />
        </ant>
    </target>
    
    <!-- Renders a chunked HTML manual -->
    <target name="html.chunked" depends="check.required-properties, prepare, assemble-parts">
        <description>
        This task will render a chunked HTML version of the manual to 
        'distribution.dir'
        </description>
        
        <!-- run styler to produce single html version -->
        <mkdir dir="${build.dir}/styled" />
        <ant antfile="${docbook.styler}" inheritall="false" target="html.chunked">
        	 <property name="basedir" location="${docbook.styler.base}" />
             <property name="docbook.xml.dir" location="${build.dir}/assembled" />
             <property name="docbook.resources.dir" location="figures-bitmap" />
             <property name="distribution.dir" location="${distribution.dir}" />
             <property name="build.dir" location="${build.dir}/styled" />
             <property name="index.name"  value="${manual.name}" />
             <!-- To avoid collisions with single html version of the manual -->
             <property name="manual.name" value="${manual.name}" />
        </ant>
    </target>
    
    <!-- Renders a PDF version of the manual -->
    <target name="pdf" depends="check.required-properties, prepare, assemble-parts">
        <description>
        This task will render a PDF version of the manual to 'distribution.dir'
        </description>
        
        <!-- run styler to produce single html version -->
        <mkdir dir="${build.dir}/styled" />
        <ant antfile="${docbook.styler}" inheritall="false" target="pdf.fop"
        	 dir="${build.dir}/styled">
        	 <property name="ant.docbook.styler.dir" location="${docbook.styler.base}" />
        	 <property name="basedir" location="${docbook.styler.base}" />
             <property name="docbook.xml.dir" location="${build.dir}/assembled" />
             <property name="docbook.resources.dir" location="figures-bitmap" />
             <property name="distribution.dir" location="${distribution.dir}" />
             <property name="build.dir" location="${build.dir}/styled" />
             <property name="index.name"  value="${manual.name}" />
             <property name="manual.name" value="${manual.name}" />
        </ant>
    </target>    
   
    
    <!-- Prepare output directories -->
    <target name="prepare">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${distribution.dir}" />
    </target>

	<!-- Clean temporary files -->
    <target name="clean">
	    <delete dir="tmp" failonerror="false" includeemptydirs="true" quiet="true" />
    </target>

    
    <!-- Utility targets -->

    <target name="assemble-parts" depends="check.required-properties">
        <description>
        Assembles input XML files and replaces tokens inside them
        with final content.
        </description>
        
        <mkdir dir="${build.dir}/assembled" />
        <copy todir="${build.dir}/assembled" overwrite="true" filtering="true">
            <fileset dir="xml">
                <exclude name="**/*.links" />
            </fileset>

            <fileset dir="${carrot2.cvs.dir}/schema/mime-types">
                <include name="*_docbook.xml" />
            </fileset>

            <filterchain>
                <filterreader classname="com.dawidweiss.ant.filters.ReplaceTokensWithFileContents">
                    <classpath refid="ant-extensions" />
                    <param type="file" value="xml/insert-file.links" />
                </filterreader>
            </filterchain>
        </copy>
    </target>

    
    <target name="check.required-properties">
        <description>
        Checks whether all the required properties are present.
        </description>

        <condition property="tmp:carrot2.cvs.ok" value="true">
            <and>
                <not>
                    <equals arg1="${carrot2.cvs.dir}" arg2="undefined" />
                </not>
                <available file="${carrot2.cvs.dir}/schema" type="dir" />
            </and>
        </condition>
        <fail message="### Define 'carrot2.cvs.dir' property pointing at Carrot2 CVS checkout."
              unless="tmp:carrot2.cvs.ok" />

        <condition property="tmp:styler.ok" value="true">
            <and>
                <available file="${docbook.styler}" type="file" />
            </and>
        </condition>
        <fail message="### You must set property 'docbook.styler' to point at docbook styler build file. Download styler from: http://www.cs.put.poznan.pl/dweiss/xml/projects/ant-docbook-styler/index.xml"
              unless="tmp:styler.ok" />
              
        <dirname file="${docbook.styler}" property="docbook.styler.base" />
        <path id="ant-extensions">
            <fileset dir="${docbook.styler.base}/ant-extensions" includes="**/*.jar" />
        </path>
    </target>

</project>
