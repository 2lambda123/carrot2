<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE chapter PUBLIC 
    "-//Dawid Weiss//DTD DocBook V3.1-Based Extension for XML and graphics inclusion//EN" 
    "http://www.cs.put.poznan.pl/dweiss/dtd/dweiss-docbook-extensions.dtd" [
<!ENTITY % isopub SYSTEM "iso-pub.ent"> 
%isopub;
<!ENTITY % local SYSTEM "local-entities.ent">
%local;
]>

<chapter id="chapter:introduction">
    <title>Introduction</title>
    
    <section>
        <title>What is &carrot;?</title>
        
        <para>
        &carrot; is a research framework for experimenting with automated querying of
        various data sources (such as search engines), processing search results and
        their visualization.
        </para>

        <para>
        Under the term &quot;research&quot;, we understand that the architecture
        of the system is oriented mostly toward flexibility; mechanisms such as
        data exchange via XML language, distributed,
        dynamically accessible components, the use of Java as primary language
        of implementation &ndash; they all make the system quite easy to tailor
        to one's needs. Performance and flexibility are often on the opposite
        ends of software design. &carrot; has a dual architecture. One design uses
        remote components and data transferred between then using XML. The performance-oriented
        design uses local Java processes where components exchange information using
        direct method calls.
        </para>
        
        <para>
        &carrot; was primarily built with search results clustering in mind, but it can
        be configured or adjusted to do other kinds of pipelined data processing. 
        </para>
    
    </section>

</chapter>
