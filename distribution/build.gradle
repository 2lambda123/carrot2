import org.apache.tools.ant.filters.ReplaceTokens

plugins {
  id 'base'
}

ext {
  distTarget = file("$buildDir/dist")
  distShadow = file("$buildDir/distCheck")
  distZip = file("$buildDir/distZip")
}

configurations {
  dcs
  examples
}

dependencies {
  dcs project(path: ":dcs:distribution", configuration: "distDir" )
  examples project(path: ":core-examples", configuration: "distribution" )
}

task syncDist(type: Sync) {
  dependsOn ":mavenLocal"
  from legal

  from(files('src/main/assembly'), {
    filteringCharset = 'UTF-8'
    filter(ReplaceTokens, tokens: replaceTokens)
  })

  from(configurations.dcs) {
    into "dcs/"
  }

  from(configurations.examples) {
    into "examples/"
  }

  from(rootProject.mavenBuildRepo) {
    into "artifacts/"
  }

  into distTarget
}

task syncDistShadow(type: Sync) {
  from distTarget
  into distShadow
}

task checkExamples(type: GradleBuild) {
  dependsOn assemble, syncDistShadow

  dir = file("${distShadow}/examples")
  tasks = ["test"]
}

task checkDcsExamples(type: GradleBuild) {
  dependsOn assemble, syncDistShadow

  dir = file("${distShadow}/dcs/examples")
  tasks = ["compileJava"]
}

task zip(type: Zip) {
  dependsOn syncDist

  archiveFileName = "carrot2-${project.version}.zip"
  destinationDirectory = distZip

  from(distTarget, {
    exclude "**/*.sh"
  })
  from(distTarget, {
    include  "**/*.sh"
    fileMode 0755
  })

  into "carrot2-${project.version}/"
}

assemble.dependsOn zip

check.dependsOn(checkExamples, checkDcsExamples)
