import org.apache.tools.ant.filters.*
import org.gradle.util.GradleVersion

plugins {
  id 'net.ltgt.apt-idea' version "0.20" apply false
}

String minimumGradleVersion = "5.1.1"
if (GradleVersion.current() < GradleVersion.version(minimumGradleVersion)) {
    throw new GradleException("Gradle ${minimumGradleVersion}+ is required (use local ./gradlew for wrapper).")
}

allprojects {
  version = '4.0'

  repositories {
    mavenCentral()
  }
}

ext {
  legal = files('carrot2.LICENSE')
  replaceTokens = [
    "version":      project.version
  ]
}

/*
configurations.all {
  transitive = false
}
*/

project("carrot2-core") {
  apply plugin: 'java-library'
  apply plugin: 'net.ltgt.apt-idea'

  dependencies {
    api "com.fasterxml.jackson.core:jackson-core:2.8.11"
    api "com.fasterxml.jackson.core:jackson-annotations:2.8.11"
    api "com.fasterxml.jackson.core:jackson-databind:2.8.11"
    api "org.carrot2.attributes:attributes-binder:1.3.3"
    api "org.slf4j:slf4j-api:1.7.13"

    implementation "org.carrot2:morfologik-polish:2.1.5"
    implementation "org.carrot2.shaded:carrot2-guava:18.0"
    implementation("org.simpleframework:simple-xml:2.7.1") {
      exclude group: 'stax'
      exclude group: 'xpp3'
    }
    implementation "org.apache.lucene:lucene-analyzers-common:5.5.5"
    implementation "org.apache.lucene:lucene-analyzers-smartcn:5.5.5"

    implementation "org.apache.commons:commons-lang3:3.5"
    implementation "com.carrotsearch:hppc:0.8.1"

    annotationProcessor "org.carrot2.attributes:attributes-processor:1.3.3"
    annotationProcessor "org.slf4j:slf4j-simple:1.7.13"
  }

  compileJava.dependsOn(processResources)
}

project("carrot2-examples") {
  apply plugin: 'java'

  dependencies {
    implementation project(':carrot2-core')
  }
}

project("carrot2-dcs-service") {
  apply plugin: 'war'

  dependencies {
    implementation project(':carrot2-core')

    compileOnly "org.eclipse.jetty:jetty-server:7.6.21.v20160908"
    compileOnly "log4j:log4j:1.2.16"

    implementation "commons-fileupload:commons-fileupload:1.3.3"
    implementation "org.apache.commons:commons-lang3:3.5"
  }
}

project("carrot2-dcs-launcher") {
  apply plugin: 'java'

  dependencies {
    implementation "args4j:args4j:2.33"
    implementation "org.eclipse.jetty:jetty-server:7.6.21.v20160908"
    implementation "org.eclipse.jetty:jetty-webapp:7.6.21.v20160908"
    implementation "log4j:log4j:1.2.16"
    implementation "org.slf4j:slf4j-api:1.7.13"
    implementation "org.slf4j:slf4j-log4j12:1.7.13"
  }

  jar {
    manifest {
      attributes("Main-Class": "org.carrot2.dcs.DcsApp")
      attributes("Class-Path": configurations.runtimeClasspath.collect { it.getName() }.join(' '))
    }
  }

  task collectDependencies(type: Sync) {
    from configurations.runtimeClasspath
    from jar

    into "$buildDir/${project.name}/lib"
  }

  task collectScripts(type: Sync) {
    from files('src/main/assembly') {
      filteringCharset = 'UTF-8'
      filter(ReplaceTokens, tokens: replaceTokens)
    }
    from legal

    into "$buildDir/${project.name}"
    preserve {
      include 'lib/'
    }
  }

  task collectWars(type: Sync) {
    from project(":carrot2-dcs-service").war

    into "$buildDir/${project.name}/web"
  }

  assemble.dependsOn(collectScripts, collectDependencies, collectWars)
}

configure(subprojects.findAll {[
        "carrot2-core",
        "carrot2-examples",
        "carrot2-dcs-launcher",
        "carrot2-dcs-service"
].contains(it.name)}) {
  apply plugin: 'net.ltgt.apt-idea'

  sourceCompatibility = 1.8
  targetCompatibility = 1.8

  compileJava.options.encoding = "UTF-8"
  compileTestJava.options.encoding = "UTF-8"

  configurations() {
    testAnnotationProcessor.extendsFrom annotationProcessor
  }
  
  dependencies {
    testImplementation "com.carrotsearch.randomizedtesting:randomizedtesting-runner:2.7.2"
    testImplementation "junit:junit:4.12"
    testImplementation "org.easytesting:fest-assert:1.4"
    testImplementation "org.easytesting:fest-mocks:1.0"
    testImplementation "org.easymock:easymock:3.0"
  }
}
