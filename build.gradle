plugins {
  id 'base'

  id 'com.moowork.node' version '1.3.1' apply false
  id "com.palantir.consistent-versions" version '1.12.4'

  id 'com.diffplug.gradle.spotless' version "3.25.0" apply false
  id "com.github.ben-manes.versions" version "0.26.0"

  id 'de.thetaphi.forbiddenapis' version '2.7' apply false

  // Task dependency inspector (gradle <task 1>...<task N> taskTree)
  // id "com.dorongold.task-tree" version "1.4"

  id "com.gradle.build-scan" version "3.0"
}

rootProject.version = '4.0.0-SNAPSHOT'
ext {
  fullName = "Carrot2"

  versions = [
    node: '10.16.3',
    yarn: '1.19.0',
  ]

  licenseHeader = file("etc/spotless/license-header.txt")
  legal = files('carrot2.LICENSE')

  forbiddenApiRulesDir = file("etc/forbidden-apis")
}

apply from: file('gradle/defaults.gradle')
apply from: file('gradle/cleanall.gradle')
apply from: file('gradle/min-gradle-version.gradle')
apply from: file('gradle/gitinfo.gradle')
apply from: file('gradle/buildinfo.gradle')
apply from: file('gradle/defaults-java.gradle')

apply from: file('gradle/node/defaults-node.gradle')

apply from: file('gradle/ide/idea.gradle')

apply from: file('gradle/ci/buildscan.gradle')

apply from: file("gradle/testing/defaults-tests.gradle")
apply from: file("gradle/testing/fail-on-no-tests.gradle")
apply from: file("gradle/testing/per-project-summary.gradle")
apply from: file("gradle/testing/slowest-tests-at-end.gradle")

apply from: file("gradle/validation/forbidden-apis.gradle")
apply from: file("gradle/validation/spotless.gradle")

apply from: file('gradle/maven/defaults-maven.gradle')

subprojects {
  if (project.file("src/main/java").exists() ||
      project.file("src/test/java").exists() ||
      project.file("src/main/webapp").exists()) {
    apply plugin: 'java-library'

    if (![":core-examples"].contains(project.path)) {
      dependencies {
        testImplementation project(':infra:tests')
      }
    }
  }
}

allprojects {
  plugins.withType(WarPlugin) {
    configurations {
      war {}
    }

    artifacts {
      war tasks.war
    }

    dependencies {
      // TODO: a bug in palantir prevents versionless dependency here.
      providedCompile "javax.servlet:javax.servlet-api:3.1.0"
    }
  }
}
