
apply from: file('gradle/min-gradle-version.gradle')
apply from: file('gradle/loadProperties.gradle')
apply from: file('gradle/gitinfo.gradle')
apply from: file('gradle/buildinfo.gradle')

allprojects {
  group 'org.carrot2'
  version = '4.0'
}

ext {
  versions = [:]

  legal = files('carrot2.LICENSE')

  gitRev = gitStatus.id

  replaceTokens = [
    'version': rootProject.version,
    'gitRev': gitRev,
    'buildDate': buildDate,
    'buildDateTrimmed': buildDateTrimmed
  ]
}

configure(rootProject) { project ->
  loadProperties(file('dependencies.versions'), ext.versions)
}

allprojects {
  apply plugin: 'idea'

  repositories {
    mavenCentral()
  }

  idea {
    module {
      outputDir file('build/idea/classes/main')
      testOutputDir file('build/idea/classes/test')
      downloadSources = true
    }
  }

  afterEvaluate {
    if (project.plugins.hasPlugin(JavaPlugin)) {
      sourceCompatibility = 1.8
      targetCompatibility = 1.8

      compileJava.options.encoding = "UTF-8"
      compileTestJava.options.encoding = "UTF-8"

      dependencies {
        testImplementation project(':carrot2-test-infra')
      }

      tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
      }

      tasks.withType(Jar) {
        manifest {
          attributes("Implementation-Title": project.name,
                     "Implementation-Version": "${version} (${gitRev}, ${buildDateTrimmed})")
        }
      }
    }
  }

  afterEvaluate {
    if (project.plugins.hasPlugin(WarPlugin)) {
      configurations {
        war {}
      }

      artifacts {
        war tasks.war
      }

      dependencies {
        providedCompile "javax.servlet:javax.servlet-api:${versions.servletapi}@jar"
      }
    }
  }
}
