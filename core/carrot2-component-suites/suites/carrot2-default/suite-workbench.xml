<component-suite>
<!--
  TODO: We resolve includes using the default resource utils, but this doesn't
  seem to work with Workbench, so hardcoding the included files for a moment.
  Also, the common suite contains an OpenSearch-based document source so we'd
  need to convert that project to a plugin.
   
  <include suite="carrot2-default/suite-local.xml" />
  <include suite="carrot2-default/suite-common.xml" />
-->
  <sources>
    <source component-class="org.carrot2.source.etools.EToolsDocumentSource" id="etools">
      <label>eTools</label>
      <title>Search the Web with etools.ch</title>
      <icon-path>icons/etools.gif</icon-path>
      <mnemonic>w</mnemonic>
      <description>Carrot2 clustering engine will search the Web with www.etools.ch and automatically organize the results into thematic categories</description>
      <example-queries>
        <example-query>data mining</example-query>
        <example-query>london</example-query>
        <example-query>clustering</example-query>
      </example-queries>
    </source>
    <source component-class="org.carrot2.source.xml.XmlDocumentSource" id="xml">
      <label>XML</label>
      <title>XML files</title>
      <icon-path>icons/xml.gif</icon-path>
      <mnemonic>X</mnemonic>
      <description>Carrot2 clustering engine will load and organize documents in an XML file.</description>
    </source>
    <source component-class="org.carrot2.source.google.GoogleDesktopDocumentSource" id="google-desktop">
      <label>Google Desktop</label>
      <title>Google Desktop search</title>
      <icon-path>icons/google-desktop.png</icon-path>
      <mnemonic>D</mnemonic>
      <description>Carrot2 clustering engine will search the local instance of Google Desktop and cluster the results</description>
      <example-queries>
        <example-query>email</example-query>
        <example-query>pictures</example-query>
        <example-query>order</example-query>
      </example-queries>
    </source>
    <source component-class="org.carrot2.source.solr.SolrDocumentSource" id="solr">
      <label>Solr</label>
      <title>Solr Search Engine</title>
      <icon-path>icons/solr.png</icon-path>
      <mnemonic>s</mnemonic>
      <description>Carrot2 clustering engine will search the local instance of Solr and cluster the results</description>
      <example-queries>
        <example-query>test</example-query>
        <example-query>solr</example-query>
      </example-queries>
    </source>

    <source component-class="org.carrot2.source.boss.BossDocumentSource" id="boss-web">
      <label>Yahoo!</label>
      <title>Yahoo Web Search</title>
      <mnemonic>Y</mnemonic>
      <description>Carrot2 clustering engine will search the Web using Yahoo Boss</description>
      <icon-path>icons/yahoo.png</icon-path>
      <example-queries>
        <example-query>data mining</example-query>
        <example-query>olympics</example-query>
        <example-query>London</example-query>
      </example-queries>
    </source>

    <source component-class="org.carrot2.source.boss.BossDocumentSource" id="boss-news">
      <label>News (Boss)</label>
      <title>Yahoo! News (Boss)</title>
      <mnemonic>N</mnemonic>
      <description>Carrot2 clustering engine will search Yahoo News with Boss API and organize the results into thematic categories</description>
      <icon-path>icons/yahoo.png</icon-path>
      <example-queries>
        <example-query>iphone</example-query>
        <example-query>olympics</example-query>
        <example-query>election</example-query>
      </example-queries>
    </source>

    <source component-class="org.carrot2.source.boss.BossDocumentSource" id="boss-images">
      <label>Images (Boss)</label>
      <title>Yahoo! Image search (Boss)</title>
      <mnemonic>N</mnemonic>
      <description>Carrot2 clustering engine will search Yahoo image search with Boss API and organize the results into thematic categories</description>
      <icon-path>icons/yahoo.png</icon-path>
      <example-queries>
        <example-query>apple</example-query>
        <example-query>amiga</example-query>
        <example-query>president</example-query>
      </example-queries>
    </source>

    <source component-class="org.carrot2.source.yahoo.YahooDocumentSource" id="yahoo-news">
      <label>News</label>
      <title>Yahoo! News (API)</title>
      <mnemonic>N</mnemonic>
      <description>Carrot2 clustering engine will search Yahoo News API and organize the results into thematic categories</description>
      <icon-path>icons/yahoo.png</icon-path>
      <example-queries>
        <example-query>iphone</example-query>
        <example-query>olympics</example-query>
        <example-query>election</example-query>
      </example-queries>
    </source>    
    <source component-class="org.carrot2.source.microsoft.MicrosoftLiveDocumentSource" id="msn-web">
      <label>MSN</label>
      <title>MSN Live Search</title>
      <mnemonic>M</mnemonic>
      <description>Carrot2 clustering engine will search MSN Live and organize the results into thematic categories</description>
      <icon-path>icons/live.png</icon-path>
      <example-queries>
        <example-query>data mining</example-query>
        <example-query>lucene</example-query>
        <example-query>java</example-query>
      </example-queries>
    </source>
    <source component-class="org.carrot2.source.pubmed.PubMedDocumentSource" id="pubmed">
      <label>PubMed</label>
      <title>PubMed medical database</title>
      <mnemonic>P</mnemonic>
      <description>Carrot2 clustering engine will search the PubMed medical abstracts database and cluster the results</description>
      <icon-path>icons/pubmed.png</icon-path>
      <example-queries>
        <example-query>cancer</example-query>
        <example-query>heart</example-query>
        <example-query>lung</example-query>
      </example-queries>
    </source>
  </sources>
  <algorithms>
    <algorithm component-class="org.carrot2.clustering.lingo.LingoClusteringAlgorithm" id="lingo">
      <label>Lingo</label>
      <title>Lingo Clustering</title>
    </algorithm>
    <algorithm component-class="org.carrot2.clustering.stc.STCClusteringAlgorithm" id="stc">
      <label>STC</label>
      <title>Suffix Tree Clustering</title>
    </algorithm>
    <algorithm component-class="org.carrot2.clustering.synthetic.ByUrlClusteringAlgorithm" id="url">
      <label>By URL</label>
      <title>By URL Clustering</title>
    </algorithm>
  </algorithms>
</component-suite>